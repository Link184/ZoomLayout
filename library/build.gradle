apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'

apply plugin: 'maven'
apply plugin: 'signing'
apply from: '../publish.gradle'

ext {
    libVersion = '1.7.0'
    libGroup = 'com.otaliastudios'
    libName = 'ZoomLayout'
    libDescription = 'A View container that supports zooming and panning of View hierarchies, images and more.'
    libArtifactId = 'zoomlayout'
    githubUrl = "https://github.com/natario1/${libName}"
    githubGit = "https://github.com/natario1/${libName}.git"
}


// Required by bintray
// archivesBaseName is required if artifactId is different from gradle module name
// or you can add baseName to each archive task (sources, javadoc, aar)
version = libVersion
group = libGroup
archivesBaseName = libArtifactId

android {

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName libVersion
    }
}

dependencies {
    api "androidx.annotation:annotation:1.1.0"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly "com.otaliastudios.opengl:egloo:$eglooVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task dokkaJar(type: Jar, dependsOn: dokka) {
    archiveClassifier.set('javadoc')
    from dokka.outputDirectory
}

artifacts {
    archives dokkaJar
    archives sourcesJar
}



task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
}

signing {
    required { !VERSION_NAME.contains("SNAPSHOT") }
    sign configurations.archives
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: resolveRepositoyUrl()) {
                authentication(userName: getUsername(),
                        password: getPassword())
                pom.groupId = GROUP
                pom.artifactId = ARTIFACT_ID

                pom.version = VERSION_NAME
            }

            pom.project {
                name POM_NAME
                description POM_DESCRIPTION
                url POM_URL

                scm {
                    url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }

                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                    }
                }
            }
        }
    }
}

// To deploy ./gradlew bintrayUpload
